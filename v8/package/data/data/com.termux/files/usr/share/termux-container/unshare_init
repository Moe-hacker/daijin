#!/bin/sh
#Use sh instead of bash here to make this script more compatible,especially for alpine linux.
# ██╗ ██╗  ██╗ ███████╗ ██╗  ██╗
#████████╗ ██║ ██╔════╝ ██║  ██║
#╚██╔═██╔╝ ██║ ███████╗ ███████║
#████████╗ ╚═╝ ╚════██║ ██╔══██║
#╚██╔═██╔╝ ██╗ ███████║ ██║  ██║
# ╚═╝ ╚═╝  ╚═╝ ╚══════╝ ╚═╝  ╚═╝
#This is the init script for chroot-unshare containers.
#This script will be run every time you run an unshare container,it will create system runtime files and login to the container.
###### Github@Moe-hacker ######
#Try to fix `command not found` error.
export PATH=$PATH:"/sbin:/bin:/usr/bin:/usr/local/bin"
if [ -e /etc/enable_output ];then
  export ENABLE_OUTPUT=true
else
  export ENABLE_OUTPUT=false
fi
#Mount /proc,/sys and /dev.
mount -t proc proc -o rw,nosuid,nodev,noexec,relatime /proc >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] MOUNT /proc"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
mount -t sysfs sysfs -o ro,seclabel,nosuid,nodev,noexec,relatime /sys >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] MOUNT /sys"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
mount -t tmpfs tmpfs -o rw,seclabel,nosuid,size=65536k,mode=755 /dev >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] MOUNT /dev"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
#Create files in /dev.
mknod -m 622 /dev/console c 5 1 >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] CREATE /dev/console"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
chown root:tty /dev/console >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] CHOWN /dev/console"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
rm /dev/null
mknod -m 666 /dev/null c 1 3 >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] CREATE /dev/null"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
mknod -m 666 /dev/zero c 1 5 >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] CREATE /dev/zero"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
mknod -m 666 /dev/ptmx c 5 2 >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] CREATE /dev/ptmx"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
chown root:tty /dev/ptmx >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] CHOWN /dev/ptmx"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
mknod -m 666 /dev/tty c 5 0 >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] CREATE /dev/tty"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
chown root:tty /dev/tty >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] CHOWN /dev/tty"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
mknod -m 444 /dev/random c 1 8 >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] CREATE /dev/random"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
mknod -m 444 /dev/urandom c 1 9 >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] CREATE /dev/urandom"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
ln -s /proc/self/fd /dev/fd >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] CREATE /dev/fd"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
ln -s /proc/self/fd/0 /dev/stdin >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] CREATE /dev/stdin"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
ln -s /proc/self/fd/1 /dev/stdout >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] CREATE /dev/stdout"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
ln -s /proc/self/fd/2 /dev/stderr >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] CREATE /dev/stderr"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
ln -s /dev/null /dev/tty0 >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] CREATE /dev/tty0"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
mkdir /dev/pts >> /dev/null 2>&1
mount -t devpts -o gid=4,mode=620 devpts /dev/pts >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] CREATE /dev/pts"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
mkdir /dev/shm >> /dev/null 2>&1
mount -o rw,nosuid,nodev,mode=1777 -t tmpfs tmpfs /dev/shm >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] CREATE /dev/shm"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
mkdir /dev/mqueue >> /dev/null 2>&1
mount -t mqueue none /dev/mqueue >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] CREATE /dev/mqueue"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
mkdir /dev/net >> /dev/null 2>&1
mknod /dev/net/tun c 10 200 >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] CREATE /dev/net/tun"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
#Make some important directories read-only to make the container more safety.
mount -o bind,private,ro /proc/sysrq-trigger /proc/sysrq-trigger >> /dev/null 2>&1
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] MOUNT /proc/sysrq-trigger"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
mount -o bind,ro,relatime /proc/bus /proc/bus
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] MOUNT /proc/bus"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
mount -o bind,ro,relatime /proc/fs /proc/fs
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] MOUNT /proc/fs"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
mount -o bind,ro,relatime /proc/irq /proc/irq
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] MOUNT /proc/irq"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
mount -o bind,ro,relatime /proc/sys /proc/sys
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] MOUNT /proc/sys"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
mount -o bind,ro,seclabel,relatime  /proc/asound /proc/asound
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] MOUNT /proc/asound"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
mount -o bind,ro,seclabel,relatime /proc/scsi /proc/scsi
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] MOUNT /proc/scsi"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
mount -o bind,ro,seclabel,relatime /sys/firmware /sys/firmware
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] MOUNT /sys/firmware"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
#Set hostname.
if [ $(hostname) != $(cat /etc/hostname) ];then
  hostname $(cat /etc/hostname) >> /dev/null 2>&1
  [ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] SET HOSTNAME"
  [ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
fi
#Fix sudo `unknown host` error.
if [ "$(cat /etc/hosts|grep $(hostname))" = "" ];then
  echo 127.0.0.1 $(hostname) >> /etc/hosts
fi
[ ${ENABLE_OUTPUT} = "false" ]||/bin/echo -e "\033[38;5;159m[\033[38;5;158m\033[38;5;159m] LOGIN"
[ ${ENABLE_OUTPUT} = "false" ]||sleep 0.1s
#Recreat /dev/null to fix /dev/null strangely created by the system as a common file but not a device.
rm /dev/null&&mknod -m 666 /dev/null c 1 3
printf "\033[0m"
#Login
/bin/su - root
