#!/data/data/com.termux/files/usr/bin/bash
#########用于删除容器#########
#${CONTAINER}是配置文件的编号
clear
echo -e ""
echo -e "\033[38;5;123m//"
echo -e ""
i1=$(($(stty size|awk '{print $2}')))
let i1=$(($i1)) #i1转化为数值
i1=$(($i1-6)) #用于输出一行带颜色的空格
echo -e "\033[46;37mREMOVE$(yes " "|sed $i1'q'|tr -d '\n')\033[0m" #只是没用的输出
echo -e ""
echo -e "\033[38;5;123m//"
echo -e ""
printf "\033[38;5;123m"
cd /data/data/com.termux/files/usr/etc/container.conf.d
#遍历查找配置文件
for i in {1..100};do
  if [[ -e container-${i}.conf ]];then
    export $(cat container-${i}.conf)
    echo -e "[$i] $NAME"
  fi
done
read -p "SELECT A CONTAINER TO DELEATE: " CONTAINER
echo -e "[WARNING!!!] ALL YOUR FILES IN THIS CONTAINER WILL BE DELEATED"
echo -e "PRESS ENTER TO CONTINUE OR PRESS CTRL-C TO EXIT"
read
export $(cat /data/data/com.termux/files/usr/etc/container.conf.d/container-${CONTAINER}.conf)
#解除挂载,防止误删系统文件
clear
echo -e "UNMOUNTING"
echo -e "[START] UNMOUNT /dev"
umount -lvf ${CHROOT_DIR}/dev >/dev/null 2>&1 #解除/dev的挂载
echo -e "[DONE ] UNMOUNT /dev"
echo -e "[START] UNMOUNT /sys"
umount -lvf ${CHROOT_DIR}/sys >/dev/null 2>&1 #解除/sys的挂载
echo -e "[DONE ] UNMOUNT /sys"
echo -e "[START] UNMOUNT /proc" 
umount -lvf ${CHROOT_DIR}/proc >/dev/null 2>&1 #解除/proc挂载
echo -e "[DONE ] UNMOUNT /proc"
echo -e "[START] UNMOUNT /sdcard" 
umount ${CHROOT_DIR}/sdcard >/dev/null 2>&1 #解除/sdcard的挂载
echo -e "[DONE ] UNMOUNT /sdcard"
echo -e "[START] UNMOUNT ${CHROOT_DIR}" 
umount -lvf ${CHROOT_DIR} >/dev/null 2>&1 #解除目录自身挂载
losetup -d ${CHROOT_IMG} >/dev/null 2>&1 #解除img镜像与虚拟设备的关联
echo -e "[DONE ] UNMOUNT ${CHROOT_DIR}"
echo -e "REMOVING CONTAINER"
sleep 2s
#删除旧容器,同时防止执行rm -rf
if [[ ${CHROOT_DIR} != "" ]];then
  rm -rfv ${CHROOT_DIR}
fi
if [[ ${CHROOT_IMG} != "" ]];then
  rm -rfv ${CHROOT_IMG}
fi
rm /data/data/com.termux/files/usr/etc/container.conf.d/container-${CONTAINER}.conf
rm /data/data/com.termux/files/usr/etc/container.conf
#选择新容器
unset CONTAINER
if [[ $( ls /data/data/com.termux/files/usr/etc/container.conf.d ) != "" ]];then
  cd /data/data/com.termux/files/usr/etc/container.conf.d
  for i in {1..100};do
    if [[ -e container-${i}.conf ]];then
      export $(cat container-${i}.conf)
      echo -e "\033[38;5;123m[$i] $NAME"
    fi
  done
  read -p "SELECT A NEW CONTAINER: " CONTAINER
  echo CONTAINER=${CONTAINER} >> /data/data/com.termux/files/usr/etc/container.conf
fi
printf "\033[0m"
#   │  │   ╔══╝╔══║╔══╝
# ── ── ── ║   ║  ║║
#   │  │   ╔══╝║  ║╔══╝
# ── ── ── ║   ║  ║║
#   │  │   ═══╝═══╝╝
