#!/data/data/com.termux/files/usr/bin/bash
#########用于没用的开头输出#########
UNMOUNT(){
echo -e "\033[41;30m            ║ ║  ╔═   ╔╔   ╔═║  ║ ║  ╔═   ═╔╝  ╝  ╔═   ╔═╝            \033[0m"
echo -e "\033[41;30m            ║ ║  ║ ║  ║║║  ║ ║  ║ ║  ║ ║   ║   ║  ║ ║  ║ ║            \033[0m"
echo -e "\033[41;30m            ══╝  ╝ ╝  ╝╝╝  ══╝  ══╝  ╝ ╝   ╝   ╝  ╝ ╝  ══╝            \033[0m"
}
CONFIGURE(){
echo -e "\033[41;30m               ╔═╝  ╔═║  ╔═   ╔═╝  ╝  ╔═╝  ║ ║  ╔═║  ╔═╝              \033[0m"
echo -e "\033[41;30m               ║    ║ ║  ║ ║  ╔═╝  ║  ║ ║  ║ ║  ╔╔╝  ╔═╝              \033[0m"
echo -e "\033[41;30m               ══╝  ══╝  ╝ ╝  ╝    ╝  ══╝  ══╝  ╝ ╝  ══╝              \033[0m"
}
UPDATE(){
echo -e "\033[41;30m                 ║ ║  ╔═║  ╔═   ╔═║  ═╔╝  ╝  ╔═   ╔═╝                 \033[0m"
echo -e "\033[41;30m                 ║ ║  ╔═╝  ║ ║  ╔═║   ║   ║  ║ ║  ║ ║                 \033[0m"
echo -e "\033[41;30m                 ══╝  ╝    ══   ╝ ╝   ╝   ╝  ╝ ╝  ══╝                 \033[0m"
}
MOUNT(){
echo -e "\033[41;30m                 ╔╔   ╔═║  ║ ║  ╔═   ═╔╝  ╝  ╔═   ╔═╝                 \033[0m"
echo -e "\033[41;30m                 ║║║  ║ ║  ║ ║  ║ ║   ║   ║  ║ ║  ║ ║                 \033[0m"
echo -e "\033[41;30m                 ╝╝╝  ══╝  ══╝  ╝ ╝   ╝   ╝  ╝ ╝  ══╝                 \033[0m"
}
CONTAINER(){
echo -e "\033[41;30m               ╔═╝  ╔═║  ╔═   ═╔╝  ╔═║  ╝  ╔═   ╔═╝  ╔═║              \033[0m"
echo -e "\033[41;30m               ║    ║ ║  ║ ║   ║   ╔═║  ║  ║ ║  ╔═╝  ╔╔╝              \033[0m"
echo -e "\033[41;30m               ══╝  ══╝  ╝ ╝   ╝   ╝ ╝  ╝  ╝ ╝  ══╝  ╝ ╝              \033[0m"
}
echo -e "\033[31mTERMUX-CONTAINER\033[0m"
sleep 0.1s
sleep 0.1s
echo -e "\033[31mGPL-V3 LICENSE\033[0m"
sleep 0.1s
echo -e ""
echo -e "\033[31m//\033[0m"
echo -e ""
sleep 0.1s
echo -e "\033[41;30m<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\033[0m"
case $TODO in
        unmount)  UNMOUNT;;
        configure)CONFIGURE;;
        update)   UPDATE;;
        mount)    MOUNT;;
        *)        CONTAINER;;
esac
echo -e "\033[41;30m>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\033[0m"
echo -e ""
sleep 0.1s
echo -e "\033[31m//\033[0m"
echo -e ""
sleep 0.1s
echo -e "\033[31mCONTAINER WITH CHROOT\033[0m"
sleep 0.1s
echo -e "\033[31mNO WARRANTY\033[0m"
sleep 0.1s
echo -e "\033[31mKERNEL $(uname --kernel-release)\033[0m"
sleep 0.1s
echo -e "\033[31mTIME $(date|awk '{print $4}')\033[0m"
sleep 0.1s
echo -e "\033[31mHOST $(hostname)\033[0m"
sleep 0.1s
echo -e "\033[31mANDROID $(neofetch |grep Android|awk '{print $3}')\033[0m"
echo -e ""
sleep 0.1s
echo -e ""
sleep 0.1s
echo -e "\033[31m10011011 11011000 11000101 10100101 11010101 11010000 11010111 0100000\033[0m"
sleep 0.1s
echo -e "\033[31m11010101 11011111 11000101 11011000 11000101 10111000 11010011 1000011\033[0m"
sleep 0.1s
echo -e "\033[31m11001101 11000101 11110000 10000000 11100011 11011000 11000101 1100110\033[0m"
sleep 0.1s
echo -e "\033[31m11010111 11011111 11001100 10111000 11001011 11011011 11011000 1100001\033[0m"
sleep 0.1s
echo -e "\033[31m11001101 11000101 11101000 11011000 11000101 10000000 11011000 1100010\033[0m"
sleep 0.1s
echo -e "\033[31m11000101 11000011 11011000 11000101 11101011 11001000 11011110 1000000\033[0m"
sleep 0.1s
echo -e "\033[31m11001111 10110001 11011011 11000101 11011000 11000101 11001101 1001100\033[0m"
sleep 0.1s
echo -e "\033[31m11100010 10000001 11011000 11000101 11000110 11011001 11011001 1000010\033[0m"
sleep 0.1s
echo -e "\033[31m11010001 11011110 11000111 10111100 00010010 11011000 11000101 1111011\033[0m"
sleep 0.1s
echo -e "\033[31m10110111 10011011 10111010 11011000 11000101 10011010 10110100 1101110\033[0m"
sleep 0.1s
echo -e "\033[31m11001001 11001100 11011011 11011000 11000101 10000000 11011001 1000000\033[0m"
sleep 0.1s
echo -e "\033[31m11100011 10010000 11000011 11011000 11000101 11011000 11000101 0111001\033[0m"
sleep 0.1s
echo -e "\033[31m11001001 11100000 10111000 11100011 11011000 11011000 11000101 1010011\033[0m"
sleep 0.1s
echo -e "\033[31m11011011 11110111 10000000 11011000 11000101 11101101 11000101 1100101\033[0m"
sleep 0.1s
echo -e "\033[31m10001001 11011000 11000101 11101000 11011000 11000101 01000100 1101010\033[0m"
sleep 0.1s
echo -e "\033[31m11000011 11101111 11000100 11011000 11000101 11100101 01001110 1011000\033[0m"
sleep 0.1s
echo -e "\033[31m11010001 11011110 11000111 10111100 11011000 11000101 00010010 1000010\033[0m"
sleep 0.1s
echo -e "\033[31m11000001 11010011 11001011 11011000 11011000 11000101 11001110 1011100\033[0m"
echo -e ""
sleep 0.1s
echo -e "\033[31m//\033[0m"
echo -e ""
sleep 0.1s
echo -e "\033[31mNEVER SETTLE\033[0m"
echo -e ""
sleep 0.1s
echo -e "\033[31m//"
echo -e ""
sleep 0.s

